#include <ctype.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

//------------------------------------------------------- DEFINIZIONE COSTANTI SIMBOLICHE -----------------------------------------------------------//
#define LUNG_NOME 30
#define LUNG_COGNOME 30
#define LUNG_DATA_DI_NASCITA 8
#define LUNG_USERNAME 15
#define LUNG_PASSWORD 10
#define LUNG_GENERE 30
#define LUNG_NAZIONALITA 30
#define N_UTENTI 5
#define N_ARTISTI 5
#define MESE_MIN 1
#define MESE_MAX 12
#define ANNO_MIN 1901
#define ANNO_MAX 2018
//---------------------------------------------------------------------------------------------------------------------------------------------------//

//------------------------------------------------------------------- STRUCT ARTISTI ----------------------------------------------------------------//
typedef struct{
	int id_artista;
	char nome_artista[LUNG_NOME];
	char genere[LUNG_GENERE];
	char nazionalita[LUNG_NAZIONALITA];
	int anno_inizio;
}artisti;
//---------------------------------------------------------------------------------------------------------------------------------------------------//

//------------------------------------------------------------------ STRUCT UTENTI ------------------------------------------------------------------//
typedef struct{
	int id_utente;
	char nome_utente[LUNG_NOME];
	char cognome_utente[LUNG_COGNOME];
	int giorno_nascita;
	int mese_nascita;
	int anno_nascita;
	char username[LUNG_USERNAME];
	char password[LUNG_PASSWORD];
	artisti preferenza[10];
}utenti;
//---------------------------------------------------------------------------------------------------------------------------------------------------//

//--------------------------------------------------------------- PROTOTIPI DI FUNZIONE -------------------------------------------------------------//
void scritta_spotify();
void scritta_login();
void scritta_signup();
void scritta_home();
void interfaccia_iniziale(utenti utente[], artisti artista[], int i, int scelta);
void login(FILE* file_utenti, utenti utente[], artisti artista[], int i, int scelta);
void signup(FILE* file_utenti, utenti utente[], artisti artista[], int i, int scelta);
void menu_utente(FILE* file_utenti, utenti utente[], artisti artista[], int i, int scelta);
//---------------------------------------------------------------------------------------------------------------------------------------------------//

int main(void)
{
	utenti utente[N_UTENTI];
    artisti artista[N_ARTISTI];
    int i=0;
    int scelta=0;

    interfaccia_iniziale(utente, artista, i, scelta);
    system("pause");
}

void scritta_spotify()
{
	printf(
		"\t\t\t\t\t\t                                                                                      \n"
		"\t\t\t\t\t\t          |||||||    ||||||||   ||||||||    ||||||||    ||    ||||||||   ||    ||     \n"
        "\t\t\t\t\t\t          ||         ||    ||   ||    ||       ||       ||    ||         ||    ||     \n"
        "\t\t\t\t\t\t          |||||||    ||||||||   ||    ||       ||       ||    ||||||     ||||||||     \n"
        "\t\t\t\t\t\t               ||    ||         ||    ||       ||       ||    ||            ||        \n"
        "\t\t\t\t\t\t          |||||||    ||         ||||||||       ||       ||    ||            ||        \n"
      );
 }

void scritta_login(){

	 printf(
		 "\n\n"
	     "        _____________\n"
         "       |  _________  |\n"
         "       | |         | |\n"
         "       | |         | |\n"
         "      _| |_________| |_\n"
         "     |       ___       |   ||\n"
	     "     |      |   |      |   ||                         ||  ||\n"
         "     |      |   |      |   ||       ||||||   ||||||       ||||||\n"
         "     |       | |       |   ||       ||  ||   ||  ||   ||  ||  ||\n"
         "     |       |_|       |   ||||||   ||||||   ||||||   ||  ||  ||\n"
         "     |_________________|                         ||\n"
         "                                             ||||||\n");
          }

void scritta_signup()
{
	 printf("\n\n"
			"     ____                                                                        ____ \n"
            "    |    |        ||||||                                                        |    |\n"
		    "    |    |        ||        ||              ||                                  |    |\n"
			"  __|    |__      ||||||          ||||||    ||||||      ||  ||    ||||||      __|    |__\n"
			"  |        |          ||    ||    ||  ||    ||  ||      ||  ||    ||  ||      |        |\n"
			"   |      |       ||||||    ||    ||||||    ||  ||      ||||||    ||||||       |      |\n"
			"    |    |                            ||                          ||            |    |\n"
			"     |__|                         ||||||                          ||             |__|\n");
 }

void scritta_home()
{

	 printf("\n\n"
			 "   ||  ||    ||||||    ||     ||    ||||||\n"
			 "   ||  ||    ||  ||    |||| ||||    ||\n"
			 "   ||||||    ||  ||    || ||  ||    ||||\n"
			 "   ||  ||    ||  ||    ||     ||    ||\n"
			 "   ||  ||    ||||||    ||     ||    ||||||\n");
 }

void interfaccia_iniziale(utenti utente[], artisti artista[], int i, int scelta)
{
	FILE*file_utenti;

	scritta_spotify();
	printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |              1. LOGIN                 |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
	printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |              2. SIGN UP               |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
	printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |              3. EXIT                  |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");

	do
	{
		printf("\n\n\t\t\t\t\t\t\t\t\t   > QUALE OPERAZIONE DESIDERI EFFETTUARE?   ");
		scanf("%d", &scelta);

		if(scelta < 1 || scelta > 3)
			printf("\n\n\t\t\t\t\t\t\t\t\t       * SCELTA NON VALIDA, RIPROVA!\n\n");

	}while(!(scelta >= 1 && scelta <= 3)); //da implementare il controllo sui caratteri

	switch(scelta)
	{
		case 1: //LOGIN
			system("cls");
			scritta_spotify();
			scritta_login();
			login(file_utenti, utente, artista, i, scelta);
			break;

		case 2: //REGISTRAZIONE
			system("cls");
			scritta_spotify();
			scritta_signup();
			signup(file_utenti, utente, artista, i, scelta);
			break;

		case 3:	//EXIT
			break;
	}
}

void menu_utente(FILE* file_utenti, utenti utente[], artisti artista[], int i, int scelta)
{
     system("cls");

     scritta_spotify();
     printf("\n\n\t\t\t\t\t\t\t\t\t               Benvenuto %s",utente[i].nome_utente);
     printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
     printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
     printf("\n\t\t\t\t\t\t\t\t\t  |      1. VISUALIZZA LISTA ARTISTI      |");
     printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
     printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
     printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
     printf("\n\t\t\t\t\t\t\t\t\t  |           2. ASCOLTA MUSICA           |");
     printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
     printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
     printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
     printf("\n\t\t\t\t\t\t\t\t\t  |         3. PREFERENZA ARTISTI         |");
     printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
     printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
     printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
     printf("\n\t\t\t\t\t\t\t\t\t  |           4.RICERCA ARTISTA           |");
     printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
     printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
     printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
     printf("\n\t\t\t\t\t\t\t\t\t  |    5.TOP 10 ARTISTI PIU'ASCOLTATI     |");
     printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
     printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
     printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
     printf("\n\t\t\t\t\t\t\t\t\t  |              6. PROFILO               |");
     printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
     printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
     printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
     printf("\n\t\t\t\t\t\t\t\t\t  |                7. EXIT                |");
     printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");

     printf("\n\n\t\t\t\t\t\t\t\t\t    QUALE OPERAZIONE DESIDERI EFFETTUARE?   ");

     scanf("%d",&scelta);

     switch(scelta)
     {

     	 case 1:
     		 break;

     	 case 2:
     		 break;

     	 case 3:
     		 break;

     	 case 4:
     		 break;

     	 case 5:
     		 break;

		  case 6:
			 break;

		  case 7:
			  break;
     }
}

void signup(FILE* file_utenti, utenti utente[], artisti artista[], int i, int scelta)
{
	int count_utenti=0; //contatore del n di utenti
	i=0;

	if((file_utenti =  fopen("Utenti.txt" , "a+")) == NULL)
		printf("Errore nell'apertura!\n");

	else
	{
		while(!feof(file_utenti))
		{
			fscanf(file_utenti,"%s %s %d %d %d %s %s\n", utente[i].nome_utente, utente[i].cognome_utente,&utente[i].mese_nascita,&utente[i].giorno_nascita,&utente[i].anno_nascita,utente[i].username,utente[i].password);
			count_utenti++;
			i++;
		}

		printf("\n\n\n> INSERISCI IL NOME:   ");
		scanf("%s", utente[count_utenti].nome_utente);
		printf("\n\n> INSERISCI IL COGNOME:   ");
		scanf("%s", utente[count_utenti].cognome_utente);
		printf("\n\nDATA DI NASCITA: ");

		do
		{
			printf("\n\n\t> INSERISCI IL MESE DI NASCITA:   ");
			scanf("%d",&utente[count_utenti].mese_nascita);

			if(utente[count_utenti].mese_nascita < MESE_MIN|| utente[count_utenti].mese_nascita > MESE_MAX)
			printf("\n\t   * MESE NON VALIDO! INSERISCI UN VALORE COMPRESO TRA 1 E 12.\n");

		}while(utente[count_utenti].mese_nascita < MESE_MIN || utente[count_utenti].mese_nascita > MESE_MAX);

		if(utente[count_utenti].mese_nascita == 2) //mese febbraio
		{
			do
			{
				printf("\n\n\t> INSERISCI IL GIORNO DI NASCITA:   ");
				scanf("%d",&utente[0].giorno_nascita);

				if(utente[count_utenti].giorno_nascita < 1|| utente[count_utenti].giorno_nascita > 28)
					printf("\n\t   * GIORNO NON VALIDO! INSERISCI UN VALORE COMPRESO TRA 1 E 28.\n");

				 }while(utente[count_utenti].giorno_nascita < 1 || utente[count_utenti].giorno_nascita > 28);
			}


		else if(utente[count_utenti].mese_nascita == 4 || utente[count_utenti].mese_nascita == 6 || utente[count_utenti].mese_nascita == 9 || utente[count_utenti].mese_nascita == 11)
		{
			do
			{
				printf("\n\n\t> INSERISCI GIORNO DI NASCITA:   ");
				scanf("%d",&utente[count_utenti].giorno_nascita);

				if(utente[count_utenti].giorno_nascita < 1 || utente[count_utenti].giorno_nascita > 30)
				   printf("\n\t   * GIORNO NON VALIDO! INSERISCI UN VALORE COMPRESO TRA 1 E 30\n");

			}while(utente[count_utenti].giorno_nascita < 1 || utente[count_utenti].giorno_nascita > 30);

		}

		else if(utente[count_utenti].mese_nascita == 1 || utente[count_utenti].mese_nascita == 3 || utente[count_utenti].mese_nascita == 5 || utente[count_utenti].mese_nascita == 7 || utente[count_utenti].mese_nascita == 8 || utente[count_utenti].mese_nascita == 10 || utente[count_utenti].mese_nascita == 12)
		{
			do
			{
				printf("\n\n\t> INSERISCI IL GIORNO DI NASCITA:   ");
				 scanf("%d",&utente[count_utenti].giorno_nascita);

				if(utente[count_utenti].giorno_nascita < 1 || utente[count_utenti].giorno_nascita > 31)
				   printf("\n\t   * GIORNO NON VALIDO! INSERISCI UN VALORE COMPRESO TRA 1 E 31\n");

			}while(utente[count_utenti].giorno_nascita < 1 || utente[count_utenti].giorno_nascita > 31);
		}

		do
		{
			printf("\n\n\t> INSERISCI L'ANNO DI NASCITA:   ");
			scanf("%d",&utente[count_utenti].anno_nascita);

			if(utente[count_utenti].anno_nascita < ANNO_MIN || utente[count_utenti].anno_nascita > ANNO_MAX)
				printf("\n\t   * ANNO NON VALIDO! INSERISCI UN VALORE COMPRESO TRA 1901 E 2018\n");

		 }while(utente[count_utenti].anno_nascita < ANNO_MIN || utente[count_utenti].anno_nascita > ANNO_MAX);

		do
		{
			printf("\n\n> INSERISCI L'USERNAME:   ");
			scanf("%s",	utente[count_utenti].username);

			if(strlen(utente[count_utenti].username) > LUNG_USERNAME)
				printf("\n\t   * USERNAME NON VALIDO! INSERISCI MAX 15 CARATTERI\n");

		}while(strlen(utente[count_utenti].username) > LUNG_USERNAME);

		int count_maiuscole=0; 	//contatore caratteri maiuscoli
		int count_numeri=0;		//contatore caratteri numerici

		printf("\n\n\n- NOTA PASSWORD: Numero caratteri compreso tra 5 e 10, con almeno una maiuscola e almeno un numero\n");

		int lung_password_in=0;
		int j=0; //indice password
		do
		{
			printf("\n\n> INSERISCI LA PASSWORD:   ");
			scanf("%s", utente[count_utenti].password);

			count_maiuscole= 0; //azzeramento della variabile "maiuscole"
			count_numeri=	0;		//azzeramento della variabile "numeri"

			lung_password_in= strlen(utente[count_utenti].password);

			for(j=0; j < lung_password_in; j++)
			{
				count_numeri= count_numeri + isdigit(utente[count_utenti].password[j]); //conteggio delle cifre numeriche presenti nella password inserita
				count_maiuscole= count_maiuscole + isupper(utente[count_utenti].password[j]); //conteggio delle lettere maiuscole presenti nella password inserita

				if((count_numeri > 0) && (count_maiuscole > 0))
					j= lung_password_in; //non vi è il bisogno di eseguire tutti i cicli se è stata già rilevata una lettara maiuscola e una cifra numerica
			}

			if((lung_password_in < (LUNG_PASSWORD / 2)) || (lung_password_in > LUNG_PASSWORD))
				printf("\n   * PASSWORD NON VALIDA! INSERIRE UN NUMERO DI CARATTERI COMPRESO TRA 5 E 10\n");

			if	(count_numeri	==	0) //verifica se la password inserita non ha una cifra numerica
				printf("\n   * PASSWORD NON VALIDA! INSERIRE ALMENO UN NUMERO\n");

			if	(count_maiuscole == 0)	//verifica se la password inserita non ha una lettera maiuscola
				printf("\n   * PASSWORD NON VALIDA! INSERIRE ALMENO UN CARATTERE MAIUSCOLO\n");

		}while(!((count_numeri > 0) && (count_maiuscole > 0) && (lung_password_in >= (LUNG_PASSWORD / 2)) && (lung_password_in <= LUNG_PASSWORD))); //ripete il ciclo finchè i vincoli imposti sulla sintassi della password non sono rispettati

		fprintf(file_utenti, "%s\t%s\t%d\t%d\t%d\t%s\t%s\n", utente[count_utenti].nome_utente, utente[count_utenti].cognome_utente, utente[count_utenti].giorno_nascita,  utente[count_utenti].mese_nascita, utente[count_utenti].anno_nascita, utente[count_utenti].username, utente[count_utenti].password);

		printf("\n\n\tISCRIZIONE EFFETTUATA!\n");
		int tasto_accedi=0;

		do
		{
			printf("\n\n> ORA PREMI '0' PER ACCEDERE: ");
			scanf("%d", &tasto_accedi);

			if(tasto_accedi == 0)
			{
				system("cls");
				scritta_spotify();
				scritta_login();
			login(file_utenti, utente, artista, i, scelta);
			}
		}while(tasto_accedi != 0);
	}

	fclose(file_utenti);
}

void login(FILE* file_utenti, utenti utente[], artisti artista[], int i, int scelta)
{
	char username_ricercato[LUNG_USERNAME];
	char password_ricercata[LUNG_PASSWORD];
	int count_utenti=0;

	if((file_utenti =  fopen("Utenti.txt" , "r")) == NULL)
		printf("Errore nell'apertura!\n");

	else
	{
		printf("\n> INSERISCI USERNAME:  ");
		scanf("%s",username_ricercato);

		printf("\n> INSERISCI PASSWORD:  ");
		scanf("%s",password_ricercata);

		while(!feof(file_utenti))
		{
			fscanf(file_utenti,"%s %s %d %d %d %s %s\n",utente[i].nome_utente, utente[i].cognome_utente, &utente[i].mese_nascita, &utente[i].giorno_nascita, &utente[i].anno_nascita, utente[i].username, utente[i].password);

			if(strcmp(username_ricercato , utente[i].username) == 0)
			{
				if(strcmp(password_ricercata , utente[i].password) == 0)
				{
					menu_utente(file_utenti, utente, artista, i, scelta);
					count_utenti= count_utenti-1;
				}
			}

        count_utenti++;
		i++;
		}

	}

	if(count_utenti == i)
		printf("\nDATI ERRATI!\n");
}
