#include <ctype.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

//------------------------------------------------------- DEFINIZIONE COSTANTI SIMBOLICHE -----------------------------------------------------------//
#define LUNG_NOME 30				//LUNGHEZZA MASSIMA DEL CAMPO "NOME": 30
#define LUNG_COGNOME 30				//LUNGHEZZA MASSIMA DEL CAMPO "COGNOME": 30
#define LUNG_USERNAME 15			//LUNGHEZZA MASSIMA DEL CAMPO "USERNAME": 15
#define LUNG_PASSWORD 10			//LUNGHEZZA MASSIMA DEL CAMPO "PASSWORD": 10
#define LUNG_GENERE 20				//LUNGHEZZA MASSIMA DEL CAMPO "GENERE": 20
#define LUNG_CANZONE 20				//LUNGHEZZA MASSIMA DEL CAMPO "CANZONE": 20
#define LUNG_NAZIONALITA 20			//LUNGHEZZA MASSIMA DEL CAMPO "NAZIONALITA": 20
#define N_UTENTI 50				//NUMERO MASSIMO DI UTENTI: 50
#define N_ARTISTI 50				//NUMERO MASSIMO DI ARTISTI: 50
#define MESE_MIN 1				//MESE MINIMO: 1 (= GENNAIO)
#define MESE_MAX 12				//MESE MASSIMO: 12 (= DICEMBRE)
#define ANNO_MIN 1901				//ANNO MINIMO: 1901
#define ANNO_MAX 2018				//ANNO MASSIMO: 2018
//---------------------------------------------------------------------------------------------------------------------------------------------------//

//------------------------------------------------------------------- STRUCT ARTISTI ----------------------------------------------------------------//
typedef struct{
	int id_artista;
	char nome_artista[LUNG_NOME];
	char genere[LUNG_GENERE];
	char nazionalita[LUNG_NAZIONALITA];
	int anno_inizio;
	char canzone[LUNG_CANZONE];
}artisti;
//---------------------------------------------------------------------------------------------------------------------------------------------------//

//------------------------------------------------------------------ STRUCT UTENTI ------------------------------------------------------------------//
typedef struct{
	int id_utente;
	char nome_utente[LUNG_NOME];
	char cognome_utente[LUNG_COGNOME];
	int giorno_nascita;
	int mese_nascita;
	int anno_nascita;
	char username[LUNG_USERNAME];
	char password[LUNG_PASSWORD];
	artisti preferenza[10];
}utenti;
//---------------------------------------------------------------------------------------------------------------------------------------------------//

//--------------------------------------------------------------- PROTOTIPI DI FUNZIONE -------------------------------------------------------------//
void scritta_spotify();
void scritta_login();
void scritta_signup();
void interfaccia_iniziale(FILE* file_artisti, FILE* file_utenti, utenti utente[], artisti artista[], int i, int scelta);
void login(FILE* file_artisti, FILE* file_utenti, utenti utente[], artisti artista[], int i, int scelta);
void signup(FILE* file_artisti, FILE* file_utenti, utenti utente[], artisti artista[], int i, int scelta);
void menu_utente(FILE* file_artisti, FILE* file_utenti, utenti utente[], artisti artista[], int i, int scelta);
void menu_admin(FILE* file_artisti, FILE* file_utenti, utenti utente[], artisti artista[], int i, int scelta);
void visualizza_utenti(FILE* file_artisti, FILE* file_utenti, utenti utente[], artisti artista[], int i, int scelta);
void visualizza_artisti(FILE* file_artisti, FILE* file_utenti, utenti utente[], artisti artista[], int i, int scelta);
void ricerca_artisti(FILE* file_artisti,FILE* file_utenti, utenti utente[], artisti artista[], int i, int scelta);
void ricerca_pop(FILE* file_artisti,FILE* file_utenti, utenti utente[], int i,artisti artista[],int scelta);
void ricerca_per_genere(FILE* file_artisti,FILE* file_utenti, utenti utente[], int i,artisti artista[], int scelta);
void ricerca_rock(FILE* file_artisti,FILE* file_utenti, utenti utente[], int i,artisti artista[],int scelta);
void ricerca_rap(FILE* file_artisti,FILE* file_utenti, utenti utente[], int i,artisti artista[],int scelta);
void ricerca_classico(FILE* file_artisti,FILE* file_utenti, utenti utente[], int i,artisti artista[],int scelta);
void ricerca_musica_elettronica(FILE* file_artisti,FILE* file_utenti, utenti utente[], int i,artisti artista[],int scelta);
void ricerca_reggae(FILE* file_artisti, FILE* file_utenti, utenti utente[], int i,artisti artista[],int scelta);
void ricerca_anno_inizo_produzione(FILE* file_artisti,FILE* file_utenti, utenti utente[], int i,artisti artista[], int scelta);
void profilo(FILE* file_artisti, FILE* file_utenti, utenti utente[], artisti artista[], int i, int scelta);
void anagrafica(FILE* file_artisti, FILE* file_utenti, utenti utente[], artisti artista[], int i, int scelta);
//---------------------------------------------------------------------------------------------------------------------------------------------------//

int main(void)
{
	FILE* file_utenti= NULL;
	FILE* file_artisti= NULL;

	utenti utente[N_UTENTI];
    artisti artista[N_ARTISTI];
    int i=0;
    int scelta=0;

    interfaccia_iniziale(file_artisti, file_utenti, utente, artista, i, scelta);
    system("pause");
}

void scritta_spotify()
{
	printf(
		"\t\t\t\t\t\t                                                                                      \n"
		"\t\t\t\t\t\t          |||||||    ||||||||   ||||||||    ||||||||    ||    ||||||||   ||    ||     \n"
        "\t\t\t\t\t\t          ||         ||    ||   ||    ||       ||       ||    ||         ||    ||     \n"
        "\t\t\t\t\t\t          |||||||    ||||||||   ||    ||       ||       ||    ||||||     ||||||||     \n"
        "\t\t\t\t\t\t               ||    ||         ||    ||       ||       ||    ||            ||        \n"
        "\t\t\t\t\t\t          |||||||    ||         ||||||||       ||       ||    ||            ||        \n"
      );
 }

void scritta_login()
{
	 printf(
		 "\n\n"
	     "        _____________\n"
         "       |  _________  |\n"
         "       | |         | |\n"
         "       | |         | |\n"
         "      _| |_________| |_\n"
         "     |       ___       |   ||\n"
	     "     |      |   |      |   ||                         ||  ||\n"
         "     |      |   |      |   ||       ||||||   ||||||       ||||||\n"
         "     |       | |       |   ||       ||  ||   ||  ||   ||  ||  ||\n"
         "     |       |_|       |   ||||||   ||||||   ||||||   ||  ||  ||\n"
         "     |_________________|                         ||\n"
         "                                             ||||||\n");
}

void scritta_signup()
{
	 printf("\n\n"
			"     ____                                                                        ____ \n"
            "    |    |        ||||||                                                        |    |\n"
		    "    |    |        ||        ||              ||                                  |    |\n"
			"  __|    |__      ||||||          ||||||    ||||||      ||  ||    ||||||      __|    |__\n"
			"  |        |          ||    ||    ||  ||    ||  ||      ||  ||    ||  ||      |        |\n"
			"   |      |       ||||||    ||    ||||||    ||  ||      ||||||    ||||||       |      |\n"
			"    |    |                            ||                          ||            |    |\n"
			"     |__|                         ||||||                          ||             |__|\n");
}

void interfaccia_iniziale(FILE* file_artisti, FILE* file_utenti, utenti utente[], artisti artista[], int i, int scelta)
{
	system("cls");
	scritta_spotify();

	printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |              1. LOGIN                 |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
	printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |              2. SIGN UP               |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
	printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |              3. EXIT                  |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");

	do
	{
		printf("\n\n\t\t\t\t\t\t\t\t\t   > QUALE OPERAZIONE DESIDERI EFFETTUARE?   ");
		scanf("%d", &scelta);

		if(scelta < 1 || scelta > 3)
			printf("\n\n\t\t\t\t\t\t\t\t\t       * SCELTA NON VALIDA, RIPROVA!\n\n");

	}while(scelta < 1 && scelta > 3); 													//da implementare il controllo sui caratteri

	switch(scelta)
	{
		case 1: //LOGIN
			system("cls");
			scritta_spotify();
			scritta_login();
			login(file_artisti, file_utenti, utente, artista, i, scelta);
			break;

		case 2: //SIGNUP
			system("cls");
			scritta_spotify();
			scritta_signup();
			signup(file_artisti, file_utenti, utente, artista, i, scelta);
			break;

		case 3:	//EXIT
			break;
	}
}

void menu_utente(FILE* file_artisti, FILE* file_utenti, utenti utente[], artisti artista[], int i, int scelta)
{
	system("cls");
	scritta_spotify();
	printf("\n\n\t\t\t\t\t\t\t\t\t\t\t   Benvenuto");
	printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |      1. VISUALIZZA LISTA ARTISTI      |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
	printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |           2. ASCOLTA MUSICA           |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
	printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |         3. PREFERENZA ARTISTI         |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
	printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |           4. RICERCA ARTISTA          |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
	printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |    5. TOP 10 ARTISTI PIU'ASCOLTATI    |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
	printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |              6. PROFILO               |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
	printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |              7. LOGOUT                |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");

	do
	{
		printf("\n\n\t\t\t\t\t\t\t\t\t   > QUALE OPERAZIONE DESIDERI EFFETTUARE?   ");
		scanf("%d", &scelta);

		if(scelta < 1 || scelta > 7)
			printf("\n\n\t\t\t\t\t\t\t\t\t       * SCELTA NON VALIDA, RIPROVA!\n\n");

	}while(scelta < 1 && scelta > 7); //da implementare il controllo sui caratteri

	switch(scelta)
	{
		case 1: //VISUALIZZAZIONE DEGLI ARTISTI
			system("cls");
			scritta_spotify();
			visualizza_artisti(file_artisti, file_utenti, utente, artista, i, scelta);
			break;

		case 2:
			break;

		case 3:
			break;

		case 4: //RICERCA DEGLI ARTISTI
			system("cls");
			scritta_spotify();
			ricerca_artisti(file_artisti, file_utenti, utente, artista, i, scelta);
			break;

		case 5:
			break;

		case 6: //PROFILO
			system("cls");
			scritta_spotify();
			profilo(file_artisti, file_utenti, utente, artista, i, scelta);
			break;

		case 7: //LOGOUT
			interfaccia_iniziale(file_artisti, file_utenti, utente, artista, i, scelta);
			break;
	}
}

void menu_admin(FILE* file_artisti, FILE* file_utenti, utenti utente[], artisti artista[], int i, int scelta)
{
	system("cls");
	scritta_spotify();
	printf("\n\n\t\t\t\t\t\t\t\t\t\t\tBenvenuto Admin");
	printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |       1. VISUALIZZA LISTA UTENTI      |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
	printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |         2. AGGIUNGI UN ARTISTA        |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
	printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |        3. MODIFICA UN ARTISTA         |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
	printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |         4. ELIMINA UN ARTISTA         |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
	printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |          5. ELIMINA UN UTENTE         |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
	printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |              6. LOGOUT                |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");

	do
	{
		printf("\n\n\t\t\t\t\t\t\t\t\t   > QUALE OPERAZIONE DESIDERI EFFETTUARE?   ");
		scanf("%d", &scelta);

		if(scelta < 1 || scelta > 6)
			printf("\n\n\t\t\t\t\t\t\t\t\t       * SCELTA NON VALIDA, RIPROVA!\n\n");

	}while(scelta < 1 && scelta > 6); //da implementare il controllo sui caratteri

	switch(scelta)
	{
		case 1: //VISUALIZZA LISTA UTENTI
			system("cls");
			scritta_spotify();
			visualizza_utenti(file_artisti, file_utenti, utente, artista, i, scelta);
			break;

		case 2: //AGGIUNGI UN ARTISTA
			break;

		case 3: //MODIFICA UN ARTISTA
			break;

		case 4: //ELIMINA UN ARTISTA
			break;

		case 5: //ELIMINA UN UTENTE
			break;

		case 6: //LOGOUT
			interfaccia_iniziale(file_artisti, file_utenti, utente, artista, i, scelta);
			break;
	}
}

void signup(FILE* file_utenti, FILE* file_artisti, utenti utente[], artisti artista[], int i, int scelta)
{
	int count_utenti=0; //contatore del n utenti salvati

	i=0;

	if((file_utenti =  fopen("Utenti.txt" , "a+")) == NULL)
		printf("Errore nell'apertura!\n");

	else
	{
		while(!feof(file_utenti))
		{
			fscanf(file_utenti,"%s %s %d %d %d %s %s\n", utente[i].nome_utente, utente[i].cognome_utente, &utente[i].mese_nascita, &utente[i].giorno_nascita, &utente[i].anno_nascita, utente[i].username, utente[i].password);
			count_utenti++; //incremento del contatore degli utenti salvati
			i++;
		}

		printf("\n\n\n> INSERISCI IL NOME:   ");
		scanf("%s", utente[count_utenti].nome_utente);
		printf("\n\n> INSERISCI IL COGNOME:   ");
		scanf("%s", utente[count_utenti].cognome_utente);
		printf("\n\nDATA DI NASCITA: ");

		do
		{
			printf("\n\n\t> INSERISCI IL MESE DI NASCITA:   ");
			scanf("%d",&utente[count_utenti].mese_nascita);

			if(utente[count_utenti].mese_nascita < MESE_MIN || utente[count_utenti].mese_nascita > MESE_MAX)
				printf("\n\t   * MESE NON VALIDO! INSERISCI UN VALORE COMPRESO TRA %d E %d.\n", MESE_MIN, MESE_MAX);

		}while(utente[count_utenti].mese_nascita < MESE_MIN || utente[count_utenti].mese_nascita > MESE_MAX);

		if(utente[count_utenti].mese_nascita == 2) //mese febbraio
		{
			do
			{
				printf("\n\n\t> INSERISCI IL GIORNO DI NASCITA:   ");
				scanf("%d",&utente[count_utenti].giorno_nascita);

				if(utente[count_utenti].giorno_nascita < 1 || utente[count_utenti].giorno_nascita > 28)
					printf("\n\t   * GIORNO NON VALIDO! INSERISCI UN VALORE COMPRESO TRA 1 E 28.\n");

			}while(utente[count_utenti].giorno_nascita < 1 || utente[count_utenti].giorno_nascita > 28);
		}


		else if(utente[count_utenti].mese_nascita == 4 || utente[count_utenti].mese_nascita == 6 || utente[count_utenti].mese_nascita == 9 || utente[count_utenti].mese_nascita == 11)
		{
			do
			{
				printf("\n\n\t> INSERISCI GIORNO DI NASCITA:   ");
				scanf("%d", &utente[count_utenti].giorno_nascita);

				if(utente[count_utenti].giorno_nascita < 1 || utente[count_utenti].giorno_nascita > 30)
				   printf("\n\t   * GIORNO NON VALIDO! INSERISCI UN VALORE COMPRESO TRA 1 E 30.\n");

			}while(utente[count_utenti].giorno_nascita < 1 || utente[count_utenti].giorno_nascita > 30);
		}

		else if(utente[count_utenti].mese_nascita == 1 || utente[count_utenti].mese_nascita == 3 || utente[count_utenti].mese_nascita == 5 || utente[count_utenti].mese_nascita == 7 || utente[count_utenti].mese_nascita == 8 || utente[count_utenti].mese_nascita == 10 || utente[count_utenti].mese_nascita == 12)
		{
			do
			{
				printf("\n\n\t> INSERISCI IL GIORNO DI NASCITA:   ");
				 scanf("%d", &utente[count_utenti].giorno_nascita);

				if(utente[count_utenti].giorno_nascita < 1 || utente[count_utenti].giorno_nascita > 31)
				   printf("\n\t   * GIORNO NON VALIDO! INSERISCI UN VALORE COMPRESO TRA 1 E 31.\n");

			}while(utente[count_utenti].giorno_nascita < 1 || utente[count_utenti].giorno_nascita > 31);
		}

		do
		{
			printf("\n\n\t> INSERISCI L'ANNO DI NASCITA:   ");
			scanf("%d",&utente[count_utenti].anno_nascita);

			if(utente[count_utenti].anno_nascita < ANNO_MIN || utente[count_utenti].anno_nascita > ANNO_MAX)
				printf("\n\t   * ANNO NON VALIDO! INSERISCI UN VALORE COMPRESO TRA %d E %d.\n", ANNO_MIN, ANNO_MAX);

		}while(utente[count_utenti].anno_nascita < ANNO_MIN || utente[count_utenti].anno_nascita > ANNO_MAX);


		int lung_username_inserito=0;
		int username_esistente=0; //flag che verifica se l'username inserito è già in uso

		printf("\n\n\n- NOTA USERNAME: Numero max caratteri: %d.", LUNG_USERNAME);

		do
		{
			username_esistente=0;
			printf("\n\n> INSERISCI L'USERNAME:   ");
			scanf("%s",	utente[count_utenti].username);

			lung_username_inserito= strlen(utente[count_utenti].username);

			if(lung_username_inserito > LUNG_USERNAME)
				printf("\n   * USERNAME NON VALIDO! INSERISCI MAX %d CARATTERI.\n", LUNG_USERNAME);

			for(i=0; i<count_utenti; i++)
			{
				fscanf(file_utenti,"%s %s %d %d %d %s %s\n", utente[i].nome_utente, utente[i].cognome_utente, &utente[i].mese_nascita, &utente[i].giorno_nascita, &utente[i].anno_nascita, utente[i].username, utente[i].password);

				if(strcmp(utente[i].username, utente[count_utenti].username) == 0)
					username_esistente++;
			}

			if(username_esistente != 0)
				printf("\n   * USERNAME GIA' IN USO!\n");

		}while(lung_username_inserito > LUNG_USERNAME || username_esistente != 0);

		int count_maiuscole=0; 	//contatore caratteri maiuscoli
		int count_numeri=0;		//contatore caratteri numerici

		printf("\n\n\n- NOTA PASSWORD: Numero caratteri compreso tra %d e %d, con almeno una maiuscola e almeno un numero.", LUNG_PASSWORD/2, LUNG_PASSWORD);

		int lung_password_inserita=0;
		int j=0; //indice password

		do
		{
			printf("\n\n> INSERISCI LA PASSWORD:   ");
			scanf("%s", utente[count_utenti].password);

			count_maiuscole= 0; //azzeramento della variabile "maiuscole"
			count_numeri=	0;		//azzeramento della variabile "numeri"

			lung_password_inserita= strlen(utente[count_utenti].password);

			for(j=0; j < lung_password_inserita; j++)
			{
				count_numeri= count_numeri + isdigit(utente[count_utenti].password[j]); //conteggio delle cifre numeriche presenti nella password inserita
				count_maiuscole= count_maiuscole + isupper(utente[count_utenti].password[j]); //conteggio delle lettere maiuscole presenti nella password inserita

				if((count_numeri > 0) && (count_maiuscole > 0))
					j= lung_password_inserita; //non vi è il bisogno di eseguire tutti i cicli se è stata già rilevata una lettara maiuscola e una cifra numerica
			}

			if((lung_password_inserita < (LUNG_PASSWORD / 2)) || (lung_password_inserita > LUNG_PASSWORD))
				printf("\n   * PASSWORD NON VALIDA! INSERIRE UN NUMERO DI CARATTERI COMPRESO TRA %d E %d.\n", LUNG_PASSWORD/2, LUNG_PASSWORD);

			if(count_numeri	==	0) //verifica se la password inserita non ha una cifra numerica
				printf("\n   * PASSWORD NON VALIDA! INSERIRE ALMENO UN NUMERO.\n");

			if(count_maiuscole == 0)	//verifica se la password inserita non ha una lettera maiuscola
				printf("\n   * PASSWORD NON VALIDA! INSERIRE ALMENO UN CARATTERE MAIUSCOLO.\n");

		}while(!((count_numeri > 0) && (count_maiuscole > 0) && (lung_password_inserita >= (LUNG_PASSWORD / 2)) && (lung_password_inserita <= LUNG_PASSWORD))); //ripete il ciclo finchè i vincoli imposti sulla sintassi della password non sono rispettati

		fprintf(file_utenti, "%s\t%s\t%d\t%d\t%d\t%s\t%s\n", utente[count_utenti].nome_utente, utente[count_utenti].cognome_utente, utente[count_utenti].giorno_nascita,  utente[count_utenti].mese_nascita, utente[count_utenti].anno_nascita, utente[count_utenti].username, utente[count_utenti].password);

		fclose(file_utenti);

		printf("\n\n\tISCRIZIONE EFFETTUATA!\n");
		do
		{
			printf("\n\n> ORA PREMI '0' PER ACCEDERE:   ");
			scanf("%d", &scelta);

			if(scelta == 0)
			{
				system("cls");
				scritta_spotify();
				scritta_login();
				login(file_utenti, file_artisti, utente, artista, i, scelta);
			}

			else
				printf("\n\n   * INPUT NON VALIDO, RIPROVA!\n\n");

		}while(scelta != 0);
	}
}

void login(FILE* file_artisti, FILE* file_utenti, utenti utente[], artisti artista[], int i, int scelta)
{
	char username_ricercato[LUNG_USERNAME];
	char password_ricercata[LUNG_PASSWORD];

	if((file_utenti =  fopen("Utenti.txt" , "r")) == NULL)
		printf("Errore nell'apertura!\n");

	else //apertura del file in modalità di lettura ("r")
	{
		int username_trovato=0; //flag che verifica se l'utente ricercato è stato trovato

		printf("\n> INSERISCI USERNAME:  ");
		scanf("%s",username_ricercato);

		i=0;

		if(strcmp(username_ricercato, "admin") == 0)
		{
			do
			{
				printf("\n> INSERISCI PASSWORD:  ");
				scanf("%s",password_ricercata);

				if(strcmp(password_ricercata, "Admin123") != 0)
					printf("\n\n   * PASSWORD NON VALIDA, RIPROVA!\n\n");

			}while(!(strcmp(password_ricercata, "Admin123") == 0));

			menu_admin(file_artisti, file_utenti, utente, artista, i, scelta); //menu_admin
		}

		else
		{
			while(!feof(file_utenti))
			{
				fscanf(file_utenti,"%s %s %d %d %d %s %s\n",utente[i].nome_utente, utente[i].cognome_utente, &utente[i].mese_nascita, &utente[i].giorno_nascita, &utente[i].anno_nascita, utente[i].username, utente[i].password);

				if(strcmp(username_ricercato, utente[i].username) == 0)
				{
					username_trovato++; //utente trovato

					do
					{
						printf("\n> INSERISCI PASSWORD:  ");
						scanf("%s",password_ricercata);

						if(strcmp(password_ricercata, utente[i].password) != 0)
							printf("\n\n   * PASSWORD NON VALIDA, RIPROVA!\n\n");

					}while(strcmp(password_ricercata, utente[i].password) != 0);

					menu_utente(file_artisti, file_utenti, utente, artista, i, scelta); //accesso effettuato
				}

				else
					i++;
			}

			fclose(file_utenti); //chiusura del file "file_utenti"

			if(username_trovato == 0) //utente non trovato
			{
				printf("\n\n   * UTENTE NON ISCRITTO!\n\n");

				printf("\n\n1. RIPROVA\n");
				printf("\n2. Non sei iscritto? ISCRIVITI ORA!\n\n");

				do
				{
					printf("\n> QUALE OPERAZIONE DESIDERI EFFETTUARE?   ");
					scanf("%d", &scelta);

					if(scelta < 1 || scelta > 2)
						printf("\n\n   * INPUT NON VALIDO, RIPROVA!\n\n");

				}while(scelta < 1 || scelta > 2);

				switch(scelta)
				{
					case 1: system("cls"); //RIPROVA
						scritta_spotify();
						scritta_login();
						login(file_utenti, file_artisti, utente, artista, i, scelta);
						break;

					case 2:	system("cls"); //ISCRIVITI
						scritta_spotify();
						scritta_signup();
						signup(file_utenti, file_artisti, utente, artista, i, scelta);
				}
			}
		}
	}
}

void visualizza_artisti(FILE* file_artisti, FILE* file_utenti, utenti utente[], artisti artista[], int i, int scelta)
{
	printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |        VISUALIZZA LISTA ARTISTI       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");

	if((file_artisti =  fopen("Artisti.txt" , "r")) == NULL)
		printf("Errore nell'apertura!\n");

	else
	{
		printf("\n\n\n\n\t\t\t\t\t   NOME ARTISTA|      GENERE MUSICALE|        NAZIONALITA'|   ANNO INIZIO CARRIERA|    CANZONE POPOLARE|\n\n");

		i=0;

		while(!feof(file_artisti))
		{
			fscanf(file_artisti,"%s %s %s %d %s", artista[i].nome_artista, artista[i].genere, artista[i].nazionalita, &artista[i].anno_inizio, artista[i].canzone);
			printf("\t\t\t\t   %20s|%21s|%20s|%23d|%20s|  \n",artista[i].nome_artista, artista[i].genere, artista[i].nazionalita, artista[i].anno_inizio, artista[i].canzone);

			i++;
		}
	}

	do
	{
		printf("\n\n\n> PREMI '0' PER RITORNARE AL MENU':   ");
		scanf("%d", &scelta);

		if(scelta != 0)
			printf("\n   * INPUT NON VALIDO, RIPROVA!\n");

		else
			menu_utente(file_artisti, file_utenti, utente, artista, i, scelta);

	}while(scelta != 0);

	fclose(file_artisti);
}

void visualizza_utenti(FILE* file_artisti, FILE* file_utenti, utenti utente[], artisti artista[], int i, int scelta)
{
	printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |         VISUALIZZA LISTA UTENTI       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");

	if((file_utenti =  fopen("Utenti.txt" , "r")) == NULL)
		printf("Errore nell'apertura!\n");

	else
	{
		printf("\n\n\n\n\t\t\t\t\t\t    NOME|       COGNOME|  DATA DI NASCITA (g/m/a)|           USERNAME|          PASSWORD|\n\n");

		i=0;

		while(!feof(file_utenti))
		{
			fscanf(file_utenti,"%s %s %d %d %d %s %s", utente[i].nome_utente, utente[i].cognome_utente, &utente[i].giorno_nascita, &utente[i].mese_nascita, &utente[i].anno_nascita, utente[i].username, utente[i].password);
			printf("\t\t\t\t   %21s|%14s|%14d / %d / %d|%19s|%18s|  \n", utente[i].nome_utente, utente[i].cognome_utente, utente[i].giorno_nascita, utente[i].mese_nascita, utente[i].anno_nascita, utente[i].username, utente[i].password);

			i++;
		}
	}

	do
	{
		printf("\n\n\n> PREMI '0' PER RITORNARE AL MENU':   ");
		scanf("%d", &scelta);

		if(scelta != 0)
			printf("\n   * INPUT NON VALIDO, RIPROVA!\n");

		else
			menu_admin(file_artisti, file_utenti, utente, artista, i, scelta);

	}while(scelta != 0);

	fclose(file_utenti);

}

void ricerca_artisti(FILE* file_artisti,FILE* file_utenti, utenti utente[], artisti artista[], int i, int scelta)
{
	printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |            RICERCA ARTISTA            |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");

	if((file_artisti =  fopen("Artisti.txt" , "r")) == NULL)
		printf("Errore nell'apertura!\n");

	else
	{
		printf("\n\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
		printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
		printf("\n\t\t\t\t\t\t\t\t\t  |           1. GENERE MUSICALE          |");
		printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
		printf("\n\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
		printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
		printf("\n\t\t\t\t\t\t\t\t\t  |       2. ANNO INIZIO PRODUZIONE       |");
		printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
		printf("\n\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
		printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
		printf("\n\t\t\t\t\t\t\t\t\t  |            3. NAZIONALITA'            |");
		printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
		printf("\n\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
		printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
		printf("\n\t\t\t\t\t\t\t\t\t  |                4. EXIT                |");
		printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");

		do
		{
			printf("\n\n\t\t\t\t\t\t\t\t   > PER QUALE PARAMETRO DESIDERI RICERCARE GLI ARTISTI?   ");
			scanf("%d", &scelta);

			if(scelta < 1 || scelta > 3)
				printf("\n\n\t\t\t\t\t\t\t\t\t       * SCELTA NON VALIDA, RIPROVA!\n\n");

		}while(scelta < 1 && scelta > 3); //da implementare il controllo sui caratteri

		switch(scelta)
		{

			case 1: //RICERCA PER GENERE
				system("cls");
				scritta_spotify();
				ricerca_per_genere(file_artisti, file_utenti, utente, i, artista, scelta);
				break;

			case 2: //RICERCA PER ANNO DI PRODUZIONE
				system("cls");
				scritta_spotify();
				ricerca_anno_inizo_produzione(file_artisti, file_utenti, utente, i, artista, scelta);

				break;

			case 3: //RICERCA PER NAZIONALITA' 				//da implementare
				system("cls");
				scritta_spotify();
				break;

			case 4: //EXIT
				system("cls");
				scritta_spotify();
				menu_utente(file_artisti, file_utenti, utente, artista, i, scelta);
				break;
		}
	}
	fclose(file_artisti);
}

void ricerca_per_genere(FILE* file_artisti,FILE* file_utenti, utenti utente[], int i, artisti artista[], int scelta)
{
	 printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	 printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	 printf("\n\t\t\t\t\t\t\t\t\t  |            GENERE MUSICALE            |");
	 printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
	 printf("\n\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	 printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	 printf("\n\t\t\t\t\t\t\t\t\t  |                1. POP                 |");
	 printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
	 printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	 printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	 printf("\n\t\t\t\t\t\t\t\t\t  |                2. ROCK                |");
	 printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
	 printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	 printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	 printf("\n\t\t\t\t\t\t\t\t\t  |                 3. RAP                |");
	 printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
	 printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	 printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	 printf("\n\t\t\t\t\t\t\t\t\t  |              4. CLASSICO              |");
	 printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
	 printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	 printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	 printf("\n\t\t\t\t\t\t\t\t\t  |         5. MUSICA ELETTRONICA         |");
	 printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
	 printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	 printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	 printf("\n\t\t\t\t\t\t\t\t\t  |              6. RAGGAE                |");
	 printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
	 printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	 printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	 printf("\n\t\t\t\t\t\t\t\t\t  |                7. EXIT                |");
	 printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");

	 do
	{
		printf("\n\n\t\t\t\t\t\t\t\t\t   > QUALE OPERAZIONE DESIDERI EFFETTUARE?   ");
		scanf("%d", &scelta);

		if(scelta < 1 || scelta > 7)
			printf("\n\n\t\t\t\t\t\t\t\t\t       * SCELTA NON VALIDA, RIPROVA!\n\n");

	}while(scelta < 1 && scelta > 7); //da implementare il controllo sui caratteri


	switch(scelta)
	{
		case 1: //RICERCA PER GENERE "POP"
			system("cls");
			scritta_spotify();
			ricerca_pop(file_artisti,file_utenti, utente, i, artista, scelta);
			break;

		case 2: //RICERCA PER GENERE "ROCK"
			system("cls");
			scritta_spotify();
			ricerca_rock(file_artisti,file_utenti, utente, i, artista, scelta);
			break;

		case 3: //RICERCA PER GENERE "RAP"
			system("cls");
			scritta_spotify();
			ricerca_rap(file_artisti,file_utenti, utente, i, artista, scelta);
			break;

		case 4: //RICERCA PER GENERE "CLASSICO"
			system("cls");
			scritta_spotify();
			ricerca_classico(file_artisti,file_utenti, utente, i, artista, scelta);
			break;

		case 5: //RICERCA PER GENERE "MUSICA ELETTRONICA"
			system("cls");
			scritta_spotify();
			ricerca_musica_elettronica(file_artisti,file_utenti, utente, i, artista, scelta);
			break;

		case 6: //RICERCA PER GENERE "REGGAE"
			system("cls");
			scritta_spotify();
			ricerca_reggae(file_artisti,file_utenti, utente, i, artista, scelta);
			break;

		case 7: //EXIT
			system("cls");
			menu_utente(file_artisti, file_utenti, utente, artista, i, scelta);
			break;
	}
}

void ricerca_pop(FILE* file_artisti,FILE* file_utenti, utenti utente[], int i, artisti artista[],int scelta)
{
	printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |                  POP                  |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");

	printf("\n\n\n\n\t\t\t\t\tNOME ARTISTA   |      GENERE MUSICALE|        NAZIONALITA'|   ANNO INIZIO CARRIERA|  CANZONE POPOLARE  |\n\n");

	 while(!feof(file_artisti))
	 {
		fscanf(file_artisti,"%s %s %s %d %s", artista[i].nome_artista, artista[i].genere, artista[i].nazionalita, &artista[i].anno_inizio, artista[i].canzone);

		if(strcmp(artista[i].genere, "Pop") == 0)
			printf("\t\t\t\t   %20s|%21s|%20s|%23d|%20s|  \n",artista[i].nome_artista, artista[i].genere, artista[i].nazionalita, artista[i].anno_inizio, artista[i].canzone);

		i++;
	 }

	do
	{
		printf("\n\n\n> PREMI '0' PER RITORNARE AL MENU':   ");
		scanf("%d", &scelta);

		if(scelta != 0)
			printf("\n   * INPUT NON VALIDO, RIPROVA!\n");

		else
			menu_utente(file_artisti, file_utenti, utente, artista, i, scelta);

	}while(scelta != 0);
}

void ricerca_rock(FILE* file_artisti,FILE* file_utenti, utenti utente[], int i, artisti artista[],int scelta)
{
	printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |                  ROCK                 |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");

	printf("\n\n\n\n\t\t\t\t\tNOME ARTISTA   |      GENERE MUSICALE|        NAZIONALITA'|   ANNO INIZIO CARRIERA|  CANZONE POPOLARE  |\n\n");

	 while(!feof(file_artisti))
	 {
		fscanf(file_artisti,"%s %s %s %d %s", artista[i].nome_artista, artista[i].genere, artista[i].nazionalita, &artista[i].anno_inizio, artista[i].canzone);

		if(strcmp(artista[i].genere, "Rock") == 0)
			printf("\t\t\t\t   %20s|%21s|%20s|%23d|%20s|  \n",artista[i].nome_artista, artista[i].genere, artista[i].nazionalita, artista[i].anno_inizio, artista[i].canzone);

		i++;
	 }

	 do
	 {
		printf("\n\n\n> PREMI '0' PER RITORNARE AL MENU':   ");
		scanf("%d", &scelta);

		if(scelta != 0)
			printf("\n   * INPUT NON VALIDO, RIPROVA!\n");

		else
			menu_utente(file_artisti, file_utenti, utente, artista, i, scelta);

	 }while(scelta != 0);
}

void ricerca_rap(FILE* file_artisti,FILE* file_utenti, utenti utente[], int i, artisti artista[],int scelta)
{
	printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |                   RAP                 |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");

	printf("\n\n\n\n\t\t\t\t\tNOME ARTISTA   |      GENERE MUSICALE|        NAZIONALITA'|   ANNO INIZIO CARRIERA|  CANZONE POPOLARE  |\n\n");

	while(!feof(file_artisti))
	{
		fscanf(file_artisti,"%s %s %s %d %s", artista[i].nome_artista, artista[i].genere, artista[i].nazionalita, &artista[i].anno_inizio, artista[i].canzone);

		if(strcmp(artista[i].genere, "Rap") == 0)
			printf("\t\t\t\t   %20s|%21s|%20s|%23d|%20s|  \n", artista[i].nome_artista, artista[i].genere, artista[i].nazionalita, artista[i].anno_inizio, artista[i].canzone);

		i++;
	}

	do
	{
		printf("\n\n\n> PREMI '0' PER RITORNARE AL MENU':   ");
		scanf("%d", &scelta);

		if(scelta != 0)
			printf("\n   * INPUT NON VALIDO, RIPROVA!\n");

		else
			menu_utente(file_artisti, file_utenti, utente, artista, i, scelta);

	}while(scelta != 0);
}

void ricerca_classico(FILE* file_artisti, FILE* file_utenti, utenti utente[], int i, artisti artista[], int scelta)
{
	printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |               CLASSICO                |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");

	printf("\n\n\n\n\t\t\t\t\tNOME ARTISTA   |      GENERE MUSICALE|        NAZIONALITA'|   ANNO INIZIO CARRIERA|  CANZONE POPOLARE  |\n\n");

	 while(!feof(file_artisti))
	 {
		fscanf(file_artisti,"%s %s %s %d %s", artista[i].nome_artista, artista[i].genere, artista[i].nazionalita, &artista[i].anno_inizio, artista[i].canzone);

		if(strcmp(artista[i].genere, "Classico") == 0)
			printf("\t\t\t\t   %20s|%21s|%20s|%23d|%20s|  \n",artista[i].nome_artista, artista[i].genere, artista[i].nazionalita, artista[i].anno_inizio, artista[i].canzone);

		i++;
	 }

	do
	{
		printf("\n\n\n> PREMI '0' PER RITORNARE AL MENU':   ");
		scanf("%d", &scelta);

		if(scelta != 0)
			printf("\n   * INPUT NON VALIDO, RIPROVA!\n");

		else
			menu_utente(file_artisti, file_utenti, utente, artista, i, scelta);

	}while(scelta != 0);
}

void ricerca_musica_elettronica(FILE* file_artisti, FILE* file_utenti, utenti utente[], int i, artisti artista[], int scelta)
{
	printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |          MUSICA ELETTRONICA           |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");

	printf("\n\n\n\n\t\t\t\t\tNOME ARTISTA   |      GENERE MUSICALE|        NAZIONALITA'|   ANNO INIZIO CARRIERA|  CANZONE POPOLARE  |\n\n");

	 while(!feof(file_artisti))
	 {
		fscanf(file_artisti,"%s %s %s %d %s", artista[i].nome_artista, artista[i].genere, artista[i].nazionalita, &artista[i].anno_inizio, artista[i].canzone);

		if(strcmp(artista[i].genere, "Musica_Elettronica") == 0)
			printf("\t\t\t\t   %20s|%21s|%20s|%23d|%20s|  \n",artista[i].nome_artista, artista[i].genere, artista[i].nazionalita, artista[i].anno_inizio, artista[i].canzone);
		i++;
	 }

	do
	{
		printf("\n\n\n> PREMI '0' PER RITORNARE AL MENU':   ");
		scanf("%d", &scelta);

		if(scelta != 0)
			printf("\n   * INPUT NON VALIDO, RIPROVA!\n");

		else
			menu_utente(file_artisti, file_utenti, utente, artista, i, scelta);
	}while(scelta != 0);
}

void ricerca_reggae(FILE* file_artisti,FILE* file_utenti, utenti utente[], int i, artisti artista[],int scelta)
{
	printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |                 REGGAE                |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");

	printf("\n\n\n\n\t\t\t\t\tNOME ARTISTA   |      GENERE MUSICALE|        NAZIONALITA'|   ANNO INIZIO CARRIERA|  CANZONE POPOLARE  |\n\n");

	 while(!feof(file_artisti))
	 {
		fscanf(file_artisti,"%s %s %s %d %s", artista[i].nome_artista, artista[i].genere, artista[i].nazionalita, &artista[i].anno_inizio, artista[i].canzone);

		if(strcmp(artista[i].genere, "Reggae") == 0)
			printf("\t\t\t\t   %20s|%21s|%20s|%23d|%20s|  \n",artista[i].nome_artista, artista[i].genere, artista[i].nazionalita, artista[i].anno_inizio, artista[i].canzone);

		i++;
	 }

	do
	{
		printf("\n\n\n> PREMI '0' PER RITORNARE AL MENU':   ");
		scanf("%d", &scelta);

		if(scelta != 0)
			printf("\n   * INPUT NON VALIDO, RIPROVA!\n");

		else
			menu_utente(file_artisti, file_utenti, utente, artista, i, scelta);

	}while(scelta != 0);
}

void ricerca_anno_inizo_produzione(FILE* file_artisti,FILE* file_utenti, utenti utente[], int i, artisti artista[], int scelta)
{
	int primo_anno=0, secondo_anno=0;

	printf("\n\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |        ANNO INIZIO PRODUZIONE         |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|\n\n\n");

	do
	{
		 printf("\n> INSERISCI ANNO INIZIO RICERCA:   ");
		 scanf("%d",&primo_anno);
		 printf("\n\n> INSERISCI ANNO FINE RICERCA:   ");
		 scanf("%d",&secondo_anno);

		 if(primo_anno > secondo_anno)
			 printf("\n\n   * ANNO NON VALIDO! ANNO INIZIO RICERCA RISULTA PIU' GRANDE DELL' ANNO DI FINE RICERCA!\n\n");

		 else if(primo_anno > ANNO_MAX || secondo_anno > ANNO_MAX || primo_anno < ANNO_MIN || secondo_anno < ANNO_MIN)
			 printf("\n\n   * ANNO NON VALIDO! INSERIRE UN VALORE COMPRESO TRA %d E %d!\n\n", ANNO_MIN, ANNO_MAX);

	}while(primo_anno > ANNO_MAX || secondo_anno > ANNO_MAX || primo_anno < ANNO_MIN || secondo_anno < ANNO_MIN);


	printf("\n\n\n\t\t\t\t\tNOME ARTISTA   |      GENERE MUSICALE|        NAZIONALITA'|   ANNO INIZIO CARRIERA|  CANZONE POPOLARE  |\n\n");

	while(!feof(file_artisti))
	{
		fscanf(file_artisti,"%s %s %s %d %s", artista[i].nome_artista, artista[i].genere, artista[i].nazionalita, &artista[i].anno_inizio, artista[i].canzone);

		if(artista[i].anno_inizio >= primo_anno && artista[i].anno_inizio <= secondo_anno)
			printf("\t\t\t\t   %20s|%21s|%20s|%23d|%20s|  \n",artista[i].nome_artista, artista[i].genere, artista[i].nazionalita, artista[i].anno_inizio, artista[i].canzone);

		i++;
	}

	do
	{
		printf("\n\n\n> PREMI '0' PER RITORNARE AL MENU':   ");
		scanf("%d", &scelta);

		if(scelta != 0)
			printf("\n   * INPUT NON VALIDO, RIPROVA!\n");

		else
			menu_utente(file_artisti, file_utenti, utente, artista, i, scelta);

	}while(scelta != 0);
}

void profilo(FILE* file_artisti, FILE* file_utenti, utenti utente[], artisti artista[], int i, int scelta)
{
	printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
    printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
    printf("\n\t\t\t\t\t\t\t\t\t  |                PROFILO                |");
    printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
	printf("\n\n\n\t\t  ______________________________________                   _______________________________________\n"
           "\t\t |              __________              |                 |                                       |\n"
           "\t\t |             |**********|             |                 |             1. ANAGRAFICA             |\n"
           "\t\t |            |************|            |                 |_______________________________________|\n"
           "\t\t |           |**************|           |\n"
           "\t\t |          |****************|          |                  _______________________________________\n"
           "\t\t |           |**************|           |                 |                                       |\n"
           "\t\t |            |************|            |                 |          2. MODIFICA PROFILO          |\n"
           "\t\t |             |**********|             |                 |_______________________________________|\n"
           "\t\t |       ________|******|________       |\n"
           "\t\t |      |************************|      |                  _______________________________________\n"
           "\t\t |     |******|*************|*****|     |                 |                                       |\n"
           "\t\t |    |*******|*************|******|    |                 |        3. VISUALIZZA PREFERENZE       |\n"
           "\t\t |                                      |                 |_______________________________________|\n"
           "\t\t |______________________________________|\n");
	printf("\t\t\t\t\t\t\t\t\t   _______________________________________");
	printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |          4. ELIMINA ACCOUNT           |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");
	printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
	printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |                5. EXIT                |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");

	do
	{
		printf("\n\n\t\t\t\t\t\t\t\t\t   > QUALE OPERAZIONE DESIDERI EFFETTUARE?   ");
		scanf("%d", &scelta);

		if(scelta < 1 || scelta > 5)
			printf("\n\n\t\t\t\t\t\t\t\t\t       * SCELTA NON VALIDA, RIPROVA!\n\n");

	}while(scelta < 1 && scelta > 5); //da implementare il controllo sui caratteri

	switch(scelta)
	{
		case 1: //VISUALIZZA DATI ANAGRAFICI
			system("cls");
			scritta_spotify();
			anagrafica(file_artisti, file_utenti, utente, artista, i, scelta);
			break;

		case 2:
			break;

		case 3:
			break;

		case 4:
			break;

		case 5: //EXIT
			system("cls");
			scritta_spotify();
			menu_utente(file_artisti, file_utenti, utente, artista, i, scelta);
			break;
	}
}

void anagrafica(FILE* file_artisti, FILE* file_utenti, utenti utente[], artisti artista[], int i, int scelta)
{
	printf("\n\n\t\t\t\t\t\t\t\t\t   _______________________________________");
    printf("\n\t\t\t\t\t\t\t\t\t  |                                       |");
	printf("\n\t\t\t\t\t\t\t\t\t  |               ANAGRAFICA              |");
	printf("\n\t\t\t\t\t\t\t\t\t  |_______________________________________|");

	do
	{
		printf("\n\n\n> PREMI '0' PER RITORNARE AL MENU':   ");
		scanf("%d", &scelta);

		if(scelta != 0)
			printf("\n   * INPUT NON VALIDO, RIPROVA!\n");

		else
			menu_utente(file_artisti, file_utenti, utente, artista, i, scelta);

	}while(scelta != 0);
}
